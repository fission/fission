####################################
# This file can be used with Skaffold (https://github.com/GoogleContainerTools/skaffold) to
# build and deploy Fission to Kubernetes cluster.
# Skaffold version v2.0.3 is used for this configuration.
############## Usage ##############
# Skaffold CLI should be installed on your machine.
# For building & deploying to Cloud Provider
# $ skaffold config set default-repo vishalbiyani (vishalbiyani - should be your registry/Dockerhub handle)
# $ `skaffold run`
# For building & deploying to Kind cluster use Kind profile
# $ `skaffold run -p kind`
####################################
apiVersion: skaffold/v4beta1
kind: Config
build:
  artifacts:
  - image: fission-bundle
    context: dist/fission-bundle_linux_amd64_v1
  - image: fetcher
    context: dist/fetcher_linux_amd64_v1
  - image: pre-upgrade-checks
    context: dist/pre-upgrade-checks_linux_amd64_v1
  - image: reporter
    context: dist/reporter_linux_amd64_v1
manifests:
  helm:
    flags:
      install:
      - --timeout=3m
      - --debug
      - --dependency-update
      upgrade:
      - --timeout=3m
      - --install
      - --debug
    releases:
    - name: fission
      chartPath: ./charts/fission-all
      valuesFiles:
      - ./charts/fission-all/values.yaml
      namespace: fission
      setValues:
        analytics: "false"
        builderPodSpec.enabled: "false"
        canaryDeployment.enabled: "false"
        debugEnv: "false"
        fetcher.imageTag: ""
        grafana.dashboards.enabled: "false"
        imageTag: ""
        influxdb.enabled: "false"
        namespace: fission
        builderNamespace: ""
        functionNamespace: ""
        openTelemetry.otlpCollectorEndpoint: ""
        openTelemetry.otlpInsecure: "true"
        podMonitor.additionalPodMonitorLabels.release: prometheus
        podMonitor.enabled: "false"
        podMonitor.namespace: monitoring
        pprof.enabled: "false"
        preUpgradeChecks.imageTag: ""
        priorityClassName: system-cluster-critical
        prometheus.serviceEndpoint: ""
        repository: ghcr.io
        routerServiceType: LoadBalancer
        runtimePodSpec.enabled: "false"
        serviceMonitor.additionalServiceMonitorLabels.release: prometheus
        serviceMonitor.enabled: "false"
        serviceMonitor.namespace: monitoring
        storagesvc.archivePruner.enabled: "true"
        storagesvc.archivePruner.interval: "60"
        terminationMessagePath: /var/log/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      setValueTemplates:
        fetcher.image: '{{.IMAGE_FULLY_QUALIFIED_fetcher}}'
        image: '{{.IMAGE_FULLY_QUALIFIED_fission_bundle}}'
        postInstallReportImage: '{{.IMAGE_FULLY_QUALIFIED_reporter}}'
        preUpgradeChecks.image: '{{.IMAGE_FULLY_QUALIFIED_pre_upgrade_checks}}'
      wait: true
deploy:
  helm: {}
profiles:
- name: kind
  patches:
  - op: replace
    path: /manifests/helm/releases/0/setValues/repository
    value: ""
  - op: replace
    path: /manifests/helm/releases/0/setValues/routerServiceType
    value: NodePort
- name: kind-debug
  patches:
  - op: replace
    path: /manifests/helm/releases/0/setValues/repository
    value: ""
  - op: replace
    path: /manifests/helm/releases/0/setValues/routerServiceType
    value: NodePort
  - op: replace
    path: /manifests/helm/releases/0/setValues/debugEnv
    value: true
  - op: replace
    path: /manifests/helm/releases/0/setValues/pprof.enabled
    value: true
- name: kind-ci
  patches:
  - op: replace
    path: /manifests/helm/releases/0/setValues/repository
    value: ""
  - op: replace
    path: /manifests/helm/releases/0/setValues/storagesvc.archivePruner.interval
    value: 1
  - op: replace
    path: /manifests/helm/releases/0/setValues/routerServiceType
    value: NodePort
  - op: replace
    path: /manifests/helm/releases/0/setValues/canaryDeployment.enabled
    value: true
  - op: replace
    path: /manifests/helm/releases/0/setValues/prometheus.serviceEndpoint
    value: http://prometheus-operated.monitoring.svc.cluster.local:9090
  - op: replace
    path: /manifests/helm/releases/0/setValues/podMonitor.enabled
    value: true
  - op: replace
    path: /manifests/helm/releases/0/setValues/serviceMonitor.enabled
    value: true
  - op: replace
    path: /manifests/helm/releases/0/setValues/grafana.dashboards.enabled
    value: true
- name: kind-ci-old
  patches:
  - op: replace
    path: /manifests/helm/releases/0/setValues/repository
    value: ""
  - op: replace
    path: /manifests/helm/releases/0/setValues/storagesvc.archivePruner.interval
    value: 1
  - op: replace
    path: /manifests/helm/releases/0/setValues/routerServiceType
    value: NodePort
  - op: replace
    path: /manifests/helm/releases/0/setValues/canaryDeployment.enabled
    value: true
  - op: replace
    path: /manifests/helm/releases/0/setValues/prometheus.serviceEndpoint
    value: http://prometheus-operated.monitoring.svc.cluster.local:9090
  - op: replace
    path: /manifests/helm/releases/0/setValues/podMonitor.enabled
    value: true
  - op: replace
    path: /manifests/helm/releases/0/setValues/serviceMonitor.enabled
    value: true
  - op: replace
    path: /manifests/helm/releases/0/setValues/grafana.dashboards.enabled
    value: true
  - op: replace
    path: /manifests/helm/releases/0/setValues/builderNamespace
    value: fission-builder
  - op: replace
    path: /manifests/helm/releases/0/setValues/functionNamespace
    value: fission-function
- name: kind-opentelemetry
  patches:
  - op: replace
    path: /manifests/helm/releases/0/setValues/repository
    value: ""
  - op: replace
    path: /manifests/helm/releases/0/setValues/routerServiceType
    value: NodePort
  - op: replace
    path: /manifests/helm/releases/0/setValues/pprof.enabled
    value: true
  - op: replace
    path: /manifests/helm/releases/0/setValues/openTelemetry.otlpCollectorEndpoint
    value: otel-collector.opentelemetry-operator-system.svc:4317
