####################################
# This file can be used with Skaffold (https://github.com/GoogleContainerTools/skaffold) to
# build and deploy Fission to Kubernetes cluster.
# Skaffold version v1.10.1 is used for this configuration.
############## Usage ##############
# Skaffold CLI should be installed on your machine. 
# For building & deploying to Cloud Provider
# $ skaffold config set default-repo vishalbiyani (vishalbiyani - should be your registry/Dockerhub handle)
# $ `skaffold run` 
# For building & deploying to Kind cluster use Kind profile
# $ `skaffold run -p kind`
####################################
apiVersion: skaffold/v2beta4
kind: Config
build:
  artifacts:
    - image: fission
      context: .
      docker:
        dockerfile: cmd/fission-bundle/Dockerfile.fission-bundle
    - image: fetcher
      docker:
        dockerfile: cmd/fetcher/Dockerfile.fission-fetcher
    - image: preupgradechecks
      docker:
        dockerfile: cmd/preupgradechecks/Dockerfile.fission-preupgradechecks
    - image: reporter
      docker:
        dockerfile: cmd/reporter/Dockerfile.reporter

profiles:
  - name: kind
    patches:
      - op: replace
        path: /deploy/helm/releases/0/setValues/repository
        value: ""
      - op: replace
        path: /deploy/helm/releases/0/setValues/routerServiceType
        value: "NodePort"
  - name: kind-debug
    patches:
      - op: replace
        path: /deploy/helm/releases/0/setValues/repository
        value: ""
      - op: replace
        path: /deploy/helm/releases/0/setValues/routerServiceType
        value: "NodePort"
      - op: replace
        path: /deploy/helm/releases/0/setValues/debugEnv
        value: true
  - name: kind-ci
    patches:
    - op: replace
      path: /deploy/helm/releases/0/setValues/repository
      value: ""
    - op: replace
      path: /deploy/helm/releases/0/setValues/pruneInterval
      value: 1
    - op: replace
      path: /deploy/helm/releases/0/setValues/routerServiceType
      value: "NodePort"
    - op: replace
      path: /deploy/helm/releases/0/setValues/prometheus.enabled
      value: true
