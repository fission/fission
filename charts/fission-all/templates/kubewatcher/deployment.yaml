apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubewatcher
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    svc: kubewatcher
spec:
  replicas: 1
  selector:
    matchLabels:
      svc: kubewatcher
  template:
    metadata:
      labels:
        svc: kubewatcher
    spec:
      {{- if .Values.kubewatcher.securityContext.enabled }}
      securityContext: {{- omit .Values.kubewatcher.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
      - name: kubewatcher
        image: {{ include "fission-bundleImage" . | quote }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command: ["/fission-bundle"]
        args: ["--kubewatcher", "--routerUrl", "http://router.{{ .Release.Namespace }}"]
        env:
        - name: DEBUG_ENV
          value: {{ .Values.debugEnv | quote }}
        - name: PPROF_ENABLED
          value: {{ .Values.pprof.enabled | quote }}
        {{- include "opentelemtry.envs" . | indent 8 }}
        resources:
          {{- toYaml .Values.kubewatcher.resources | nindent 10 }}
        {{- if .Values.terminationMessagePath }}
        terminationMessagePath: {{ .Values.terminationMessagePath }}
        {{- end }}
        {{- if .Values.terminationMessagePolicy }}
        terminationMessagePolicy: {{ .Values.terminationMessagePolicy }}
        {{- end }}
      serviceAccountName: fission-svc
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets: 
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- if .Values.extraCoreComponentPodConfig }}
{{ toYaml .Values.extraCoreComponentPodConfig | indent 6 -}}
{{- end }}
