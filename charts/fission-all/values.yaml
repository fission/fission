#
# Fission chart configuration
#

## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer or ClusterIP.
serviceType: ClusterIP

## For minikube, set this to NodePort, elsewhere use LoadBalancer or ClusterIP.
routerServiceType: LoadBalancer

## Image base repository
repository: index.docker.io

## Fission image repository
image: fission/fission-bundle

## Image pull policy
pullPolicy: IfNotPresent

## Fission image version
imageTag: 1.0.0

## Fission fetcher repository
fetcherImage: fission/fetcher

## Fission fetcher image version
fetcherImageTag: 1.0.0

## Port at which Fission controller service should be exposed
controllerPort: 31313

## Port at which Fission router service should be exposed
routerPort: 31314

## Port at which NATS streaming service should be exposed
natsStreamingPort: 31316

## Set to false if you create the namespaces manually
createNamespace: true

## Namespace in which to run fission functions (this is different from
## the release namespace)
functionNamespace: fission-function

## Namespace in which to run fission builders (this is different from
## the release namespace)
builderNamespace: fission-builder

## Enable istio integration
enableIstio: false

## Logger config
logger:
  influxdbAdmin: "admin"
  fluentdImage: fission/fluentd
  fluentdImageTag: 1.0.0

## Message queue trigger config
### NATS Streaming, enabled by default
nats:
  enabled: true
  authToken: "defaultFissionAuthToken"
  clusterID: "fissionMQTrigger"

## Azure-storage-queue: enable and configure the details
azureStorageQueue:
  enabled: false
  key: ""
  accountName: ""
  
## Kafka: enable and configure the details
kafka:
  enabled: false
  brokers: 'broker.kafka:9092'
  ## version of Kafka broker
  ## For 0.x it must be a string in the format
  ## "major.minor.veryMinor.patch" example: 0.8.2.0
  ## For 1.x it must be a string in the format
  ## "major.major.veryMinor" example: 2.0.1
  ## Should be >= 0.11.0.0 to enable Kafka record headers support
  # version: "0.11.0.0"

## Persist data to a persistent volume.
persistence:
  ## If true, fission will create/use a Persistent Volume Claim
  ## If false, use emptyDir
  ##
  enabled: true

  ## A manually managed Persistent Volume Claim name
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  # existingClaim:

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner. (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

  accessMode: ReadWriteOnce
  size: 8Gi

## Analytics let us count how many people installed fission. Set to
## false to disable analytics.
analytics: true

## Internally used for generating an analytics job for non-helm installs
analyticsNonHelmInstall: false

## Enable Heapster only in clusters where heapster does not exist already
heapster: false

## Archive pruner is a garbage collector for archives on the fission storage service.
## This interval configures the frequency at which it runs inside the storagesvc pod.
## The value is in minutes.
pruneInterval: 60

## Fission pre-install/pre-upgrade checks live in this image
preUpgradeChecksImage: fission/pre-upgrade-checks

## if there are any pod specialization errors when a function is triggered and this flag is set to true, the error
## summary is returned as part of http response
debugEnv: true


## set this flag to true if prometheus needs to be deployed along with fission
prometheusDeploy: true

## set this flag to false if you dont need canary deployment feature
canaryDeployment:
  enabled: true


# Use these flags to enable opentracing, the variable is endpoint of Jaeger collector in the format shown below
#traceCollectorEndpoint: "http://jaeger-collector.jaeger.svc:14268/api/traces?format=jaeger.thrift"
#traceSamplingRate: 0.75