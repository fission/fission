/*
Copyright The Fission Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PackageSpecApplyConfiguration represents an declarative configuration of the PackageSpec type for use
// with apply.
type PackageSpecApplyConfiguration struct {
	Environment  *EnvironmentReferenceApplyConfiguration `json:"environment,omitempty"`
	Source       *ArchiveApplyConfiguration              `json:"source,omitempty"`
	Deployment   *ArchiveApplyConfiguration              `json:"deployment,omitempty"`
	BuildCommand *string                                 `json:"buildcmd,omitempty"`
}

// PackageSpecApplyConfiguration constructs an declarative configuration of the PackageSpec type for use with
// apply.
func PackageSpec() *PackageSpecApplyConfiguration {
	return &PackageSpecApplyConfiguration{}
}

// WithEnvironment sets the Environment field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Environment field is set to the value of the last call.
func (b *PackageSpecApplyConfiguration) WithEnvironment(value *EnvironmentReferenceApplyConfiguration) *PackageSpecApplyConfiguration {
	b.Environment = value
	return b
}

// WithSource sets the Source field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Source field is set to the value of the last call.
func (b *PackageSpecApplyConfiguration) WithSource(value *ArchiveApplyConfiguration) *PackageSpecApplyConfiguration {
	b.Source = value
	return b
}

// WithDeployment sets the Deployment field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Deployment field is set to the value of the last call.
func (b *PackageSpecApplyConfiguration) WithDeployment(value *ArchiveApplyConfiguration) *PackageSpecApplyConfiguration {
	b.Deployment = value
	return b
}

// WithBuildCommand sets the BuildCommand field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildCommand field is set to the value of the last call.
func (b *PackageSpecApplyConfiguration) WithBuildCommand(value string) *PackageSpecApplyConfiguration {
	b.BuildCommand = &value
	return b
}
