/*
Copyright The Fission Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/fission/fission/pkg/apis/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// PackageStatusApplyConfiguration represents an declarative configuration of the PackageStatus type for use
// with apply.
type PackageStatusApplyConfiguration struct {
	BuildStatus         *v1.BuildStatus `json:"buildstatus,omitempty"`
	BuildLog            *string         `json:"buildlog,omitempty"`
	LastUpdateTimestamp *metav1.Time    `json:"lastUpdateTimestamp,omitempty"`
}

// PackageStatusApplyConfiguration constructs an declarative configuration of the PackageStatus type for use with
// apply.
func PackageStatus() *PackageStatusApplyConfiguration {
	return &PackageStatusApplyConfiguration{}
}

// WithBuildStatus sets the BuildStatus field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildStatus field is set to the value of the last call.
func (b *PackageStatusApplyConfiguration) WithBuildStatus(value v1.BuildStatus) *PackageStatusApplyConfiguration {
	b.BuildStatus = &value
	return b
}

// WithBuildLog sets the BuildLog field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildLog field is set to the value of the last call.
func (b *PackageStatusApplyConfiguration) WithBuildLog(value string) *PackageStatusApplyConfiguration {
	b.BuildLog = &value
	return b
}

// WithLastUpdateTimestamp sets the LastUpdateTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastUpdateTimestamp field is set to the value of the last call.
func (b *PackageStatusApplyConfiguration) WithLastUpdateTimestamp(value metav1.Time) *PackageStatusApplyConfiguration {
	b.LastUpdateTimestamp = &value
	return b
}
