/*
Copyright The Fission Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// RuntimeApplyConfiguration represents an declarative configuration of the Runtime type for use
// with apply.
type RuntimeApplyConfiguration struct {
	Image     *string       `json:"image,omitempty"`
	Container *v1.Container `json:"container,omitempty"`
	PodSpec   *v1.PodSpec   `json:"podspec,omitempty"`
}

// RuntimeApplyConfiguration constructs an declarative configuration of the Runtime type for use with
// apply.
func Runtime() *RuntimeApplyConfiguration {
	return &RuntimeApplyConfiguration{}
}

// WithImage sets the Image field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Image field is set to the value of the last call.
func (b *RuntimeApplyConfiguration) WithImage(value string) *RuntimeApplyConfiguration {
	b.Image = &value
	return b
}

// WithContainer sets the Container field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Container field is set to the value of the last call.
func (b *RuntimeApplyConfiguration) WithContainer(value v1.Container) *RuntimeApplyConfiguration {
	b.Container = &value
	return b
}

// WithPodSpec sets the PodSpec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PodSpec field is set to the value of the last call.
func (b *RuntimeApplyConfiguration) WithPodSpec(value v1.PodSpec) *RuntimeApplyConfiguration {
	b.PodSpec = &value
	return b
}
