/*
Copyright The Fission Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package v1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/api/resource/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";

option go_package = "github.com/fission/fission/pkg/apis/core/v1";

// Package-wide variables from generator "generated".
option (gogoproto.marshaler_all) = true;
option (gogoproto.stable_marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;

message ContainerResourceMetricSource {
  // name is the name of the resource in question.
  optional string name = 1 [(gogoproto.casttype) = "k8s.io/api/core/v1.ResourceName", (gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // target specifies the target value for the given metric
  optional MetricTarget target = 2 [(gogoproto.customname) = "Target", (gogoproto.nullable) = false];

  // container is the name of the container in the pods of the scaling target
  optional string container = 3 [(gogoproto.customname) = "Container", (gogoproto.nullable) = false];
}

message CrossVersionObjectReference {
  // Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
  optional string kind = 1 [(gogoproto.customname) = "Kind", (gogoproto.nullable) = false];

  // Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
  optional string name = 2 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // API version of the referent
  // +optional
  optional string apiVersion = 3 [(gogoproto.customname) = "APIVersion", (gogoproto.nullable) = false];
}

message ExternalMetricSource {
  // metric identifies the target metric by name and selector
  optional MetricIdentifier metric = 1 [(gogoproto.customname) = "Metric", (gogoproto.nullable) = false];

  // target specifies the target value for the given metric
  optional MetricTarget target = 2 [(gogoproto.customname) = "Target", (gogoproto.nullable) = false];
}

message HPAScalingPolicy {
  // Type is used to specify the scaling policy.
  optional string type = 1 [(gogoproto.casttype) = "k8s.io/api/autoscaling/v2beta2.HPAScalingPolicyType", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // Value contains the amount of change which is permitted by the policy.
  // It must be greater than zero
  optional int32 value = 2 [(gogoproto.customname) = "Value", (gogoproto.nullable) = false];

  // PeriodSeconds specifies the window of time for which the policy should hold true.
  // PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
  optional int32 periodSeconds = 3 [(gogoproto.customname) = "PeriodSeconds", (gogoproto.nullable) = false];
}

message HPAScalingRules {
  // StabilizationWindowSeconds is the number of seconds for which past recommendations should be
  // considered while scaling up or scaling down.
  // StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).
  // If not set, use the default values:
  // - For scale up: 0 (i.e. no stabilization is done).
  // - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
  // +optional
  optional int32 stabilizationWindowSeconds = 3 [(gogoproto.customname) = "StabilizationWindowSeconds"];

  // selectPolicy is used to specify which policy should be used.
  // If not set, the default value MaxPolicySelect is used.
  // +optional
  optional string selectPolicy = 1 [(gogoproto.casttype) = "k8s.io/api/autoscaling/v2beta2.ScalingPolicySelect", (gogoproto.customname) = "SelectPolicy"];

  // policies is a list of potential scaling polices which can be used during scaling.
  // At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
  // +optional
  repeated HPAScalingPolicy policies = 2 [(gogoproto.customname) = "Policies", (gogoproto.nullable) = false];
}

message HorizontalPodAutoscalerBehavior {
  // scaleUp is scaling policy for scaling Up.
  // If not set, the default value is the higher of:
  //   * increase no more than 4 pods per 60 seconds
  //   * double the number of pods per 60 seconds
  // No stabilization is used.
  // +optional
  optional HPAScalingRules scaleUp = 1 [(gogoproto.customname) = "ScaleUp"];

  // scaleDown is scaling policy for scaling Down.
  // If not set, the default value is to allow to scale down to minReplicas pods, with a
  // 300 second stabilization window (i.e., the highest recommendation for
  // the last 300sec is used).
  // +optional
  optional HPAScalingRules scaleDown = 2 [(gogoproto.customname) = "ScaleDown"];
}

message MetricIdentifier {
  // name is the name of the given metric
  optional string name = 1 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // selector is the string-encoded form of a standard kubernetes label selector for the given metric
  // When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
  // When unset, just the metricName will be used to gather metrics.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector selector = 2 [(gogoproto.customname) = "Selector"];
}

message MetricSpec {
  // type is the type of metric source.  It should be one of "ContainerResource", "External",
  // "Object", "Pods" or "Resource", each mapping to a matching field in the object.
  // Note: "ContainerResource" type is available on when the feature-gate
  // HPAContainerMetrics is enabled
  optional string type = 1 [(gogoproto.casttype) = "k8s.io/api/autoscaling/v2beta2.MetricSourceType", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // object refers to a metric describing a single kubernetes object
  // (for example, hits-per-second on an Ingress object).
  // +optional
  optional ObjectMetricSource object = 2 [(gogoproto.customname) = "Object"];

  // pods refers to a metric describing each pod in the current scale target
  // (for example, transactions-processed-per-second).  The values will be
  // averaged together before being compared to the target value.
  // +optional
  optional PodsMetricSource pods = 3 [(gogoproto.customname) = "Pods"];

  // resource refers to a resource metric (such as those specified in
  // requests and limits) known to Kubernetes describing each pod in the
  // current scale target (e.g. CPU or memory). Such metrics are built in to
  // Kubernetes, and have special scaling options on top of those available
  // to normal per-pod metrics using the "pods" source.
  // +optional
  optional ResourceMetricSource resource = 4 [(gogoproto.customname) = "Resource"];

  // container resource refers to a resource metric (such as those specified in
  // requests and limits) known to Kubernetes describing a single container in
  // each pod of the current scale target (e.g. CPU or memory). Such metrics are
  // built in to Kubernetes, and have special scaling options on top of those
  // available to normal per-pod metrics using the "pods" source.
  // This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.
  // +optional
  optional ContainerResourceMetricSource containerResource = 7 [(gogoproto.customname) = "ContainerResource"];

  // external refers to a global metric that is not associated
  // with any Kubernetes object. It allows autoscaling based on information
  // coming from components running outside of cluster
  // (for example length of queue in cloud messaging service, or
  // QPS from loadbalancer running outside of cluster).
  // +optional
  optional ExternalMetricSource external = 5 [(gogoproto.customname) = "External"];
}

message MetricTarget {
  // type represents whether the metric type is Utilization, Value, or AverageValue
  optional string type = 1 [(gogoproto.casttype) = "k8s.io/api/autoscaling/v2beta2.MetricTargetType", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // value is the target value of the metric (as a quantity).
  // +optional
  optional k8s.io.apimachinery.pkg.api.resource.Quantity value = 2 [(gogoproto.customname) = "Value"];

  // averageValue is the target value of the average of the
  // metric across all relevant pods (as a quantity)
  // +optional
  optional k8s.io.apimachinery.pkg.api.resource.Quantity averageValue = 3 [(gogoproto.customname) = "AverageValue"];

  // averageUtilization is the target value of the average of the
  // resource metric across all relevant pods, represented as a percentage of
  // the requested value of the resource for the pods.
  // Currently only valid for Resource metric source type
  // +optional
  optional int32 averageUtilization = 4 [(gogoproto.customname) = "AverageUtilization"];
}

message ObjectMetricSource {
  optional CrossVersionObjectReference describedObject = 1 [(gogoproto.customname) = "DescribedObject", (gogoproto.nullable) = false];

  // target specifies the target value for the given metric
  optional MetricTarget target = 2 [(gogoproto.customname) = "Target", (gogoproto.nullable) = false];

  // metric identifies the target metric by name and selector
  optional MetricIdentifier metric = 3 [(gogoproto.customname) = "Metric", (gogoproto.nullable) = false];
}

message PodsMetricSource {
  // metric identifies the target metric by name and selector
  optional MetricIdentifier metric = 1 [(gogoproto.customname) = "Metric", (gogoproto.nullable) = false];

  // target specifies the target value for the given metric
  optional MetricTarget target = 2 [(gogoproto.customname) = "Target", (gogoproto.nullable) = false];
}

message ResourceMetricSource {
  // name is the name of the resource in question.
  optional string name = 1 [(gogoproto.casttype) = "k8s.io/api/core/v1.ResourceName", (gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // target specifies the target value for the given metric
  optional MetricTarget target = 2 [(gogoproto.customname) = "Target", (gogoproto.nullable) = false];
}

// Archive contains or references a collection of sources or
// binary files.
message Archive {
  // Type defines how the package is specified: literal or URL.
  // Available value:
  //  - literal
  //  - url
  // +optional
  optional string type = 1 [(gogoproto.casttype) = "ArchiveType", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // Literal contents of the package. Can be used for
  // encoding packages below TODO (256 KB?) size.
  // +optional
  optional bytes literal = 2 [(gogoproto.customname) = "Literal"];

  // URL references a package.
  // +optional
  optional string url = 3 [(gogoproto.customname) = "URL", (gogoproto.nullable) = false];

  // Checksum ensures the integrity of packages
  // referenced by URL. Ignored for literals.
  // +optional
  optional Checksum checksum = 4 [(gogoproto.customname) = "Checksum", (gogoproto.nullable) = false];
}

// AuthLogin defines the body for router login
message AuthLogin {
  optional string username = 1 [(gogoproto.customname) = "Username", (gogoproto.nullable) = false];

  optional string password = 2 [(gogoproto.customname) = "Password", (gogoproto.nullable) = false];
}

// Builder is the setting for environment builder.
message Builder {
  // Image for containing the language compilation environment.
  optional string image = 1 [(gogoproto.customname) = "Image", (gogoproto.nullable) = false];

  // (Optional) Default build command to run for this build environment.
  optional string command = 2 [(gogoproto.customname) = "Command", (gogoproto.nullable) = false];

  // (Optional) Container allows the modification of the deployed builder
  // container using the Kubernetes Container spec. Fission overrides
  // the following fields:
  // - Name
  // - Image; set to the Builder.Image
  // - Command; set to the Builder.Command
  // - TerminationMessagePath
  // - ImagePullPolicy
  // - ReadinessProbe
  optional k8s.io.api.core.v1.Container container = 3 [(gogoproto.customname) = "Container"];

  // PodSpec will store the spec of the pod that will be applied to the pod created for the builder
  optional k8s.io.api.core.v1.PodSpec podspec = 4 [(gogoproto.customname) = "PodSpec"];
}

// CanaryConfig is for canary deployment of two functions.
// +genclient
// +kubebuilder:object:root=true
message CanaryConfig {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional CanaryConfigSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];

  optional CanaryConfigStatus status = 3 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];
}

// CanaryConfigList is a list of CanaryConfigs.
// +kubebuilder:object:root=true
message CanaryConfigList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated CanaryConfig items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// CanaryConfigSpec defines the canary configuration spec
message CanaryConfigSpec {
  // HTTP trigger that this config references
  optional string trigger = 1 [(gogoproto.customname) = "Trigger", (gogoproto.nullable) = false];

  // New version of the function
  optional string newfunction = 2 [(gogoproto.customname) = "NewFunction", (gogoproto.nullable) = false];

  // Old stable version of the function
  optional string oldfunction = 3 [(gogoproto.customname) = "OldFunction", (gogoproto.nullable) = false];

  // Weight increment step for function
  // +optional
  optional int64 weightincrement = 4 [(gogoproto.customname) = "WeightIncrement", (gogoproto.nullable) = false];

  // Weight increment interval, string representation of time.Duration, ex : 1m, 2h, 2d (default: "2m")
  // +optional
  optional string duration = 5 [(gogoproto.customname) = "WeightIncrementDuration", (gogoproto.nullable) = false];

  // Threshold in percentage beyond which the new version of the function is considered unstable
  // +optional
  optional int64 failurethreshold = 6 [(gogoproto.customname) = "FailureThreshold", (gogoproto.nullable) = false];

  // +optional
  optional string failureType = 7 [(gogoproto.casttype) = "FailureType", (gogoproto.customname) = "FailureType", (gogoproto.nullable) = false];
}

// CanaryConfigStatus represents canary config status
message CanaryConfigStatus {
  optional string status = 1 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];
}

// Checksum of package contents when the contents are stored
// outside the Package struct. Type is the checksum algorithm;
// "sha256" is the only currently supported one. Sum is hex
// encoded.
message Checksum {
  optional string type = 1 [(gogoproto.casttype) = "ChecksumType", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  optional string sum = 2 [(gogoproto.customname) = "Sum", (gogoproto.nullable) = false];
}

// ConfigMapReference is a reference to a kubernetes configmap.
message ConfigMapReference {
  optional string namespace = 1 [(gogoproto.customname) = "Namespace", (gogoproto.nullable) = false];

  optional string name = 2 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];
}

// Environment is environment for building and running user functions.
// +genclient
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
message Environment {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional EnvironmentSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];
}

// EnvironmentList is a list of Environments.
// +kubebuilder:object:root=true
message EnvironmentList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated Environment items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// EnvironmentReference is a reference to an environment.
message EnvironmentReference {
  optional string namespace = 1 [(gogoproto.customname) = "Namespace", (gogoproto.nullable) = false];

  optional string name = 2 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];
}

// EnvironmentSpec contains with builder, runtime and some other related environment settings.
message EnvironmentSpec {
  // Version is the Environment API version
  //
  // Version "1" allows user to run code snippet in a file, and
  // it's supported by most of the environments except tensorflow-serving.
  //
  // Version "2" supports downloading and compiling user function if source archive is not empty.
  //
  // Version "3" is almost the same with v2, but you're able to control the size of pre-warm pool of the environment.
  optional int64 version = 1 [(gogoproto.customname) = "Version", (gogoproto.nullable) = false];

  // Runtime is configuration for running function, like container image etc.
  optional Runtime runtime = 2 [(gogoproto.customname) = "Runtime", (gogoproto.nullable) = false];

  // (Optional) Builder is configuration for builder manager to launch environment builder to build source code into
  // deployable binary.
  // +optional
  optional Builder builder = 3 [(gogoproto.customname) = "Builder", (gogoproto.nullable) = false];

  // (Optional) defaults to 'single'. Fission workflow uses
  // 'infinite' to load multiple functions in one function pod.
  // Available value:
  // - single
  // - infinite
  // +optional
  optional string allowedFunctionsPerContainer = 4 [(gogoproto.casttype) = "AllowedFunctionsPerContainer", (gogoproto.customname) = "AllowedFunctionsPerContainer", (gogoproto.nullable) = false];

  // Istio default blocks all egress traffic for safety.
  // To enable accessibility of external network for builder/function pod, set to 'true'.
  // (Optional) defaults to 'false'
  // +optional
  optional bool allowAccessToExternalNetwork = 5 [(gogoproto.customname) = "AllowAccessToExternalNetwork", (gogoproto.nullable) = false];

  // The request and limit CPU/MEM resource setting for poolmanager to set up pods in the pre-warm pool.
  // (Optional) defaults to no limitation.
  // +optional
  optional k8s.io.api.core.v1.ResourceRequirements resources = 6 [(gogoproto.customname) = "Resources", (gogoproto.nullable) = false];

  // The initial pool size for environment
  // +optional
  optional int64 poolsize = 7 [(gogoproto.customname) = "Poolsize", (gogoproto.nullable) = false];

  // The grace time for pod to perform connection draining before termination. The unit is in seconds.
  // (Optional) defaults to 360 seconds
  // +optional
  optional int64 terminationGracePeriod = 8 [(gogoproto.customname) = "TerminationGracePeriod", (gogoproto.nullable) = false];

  // KeepArchive is used by fetcher to determine if the extracted archive
  // or unarchived file should be placed, which is then used by specialize handler.
  // (This is mainly for the JVM environment because .jar is one kind of zip archive.)
  // +optional
  optional bool keeparchive = 9 [(gogoproto.customname) = "KeepArchive", (gogoproto.nullable) = false];

  // ImagePullSecret is the secret for Kubernetes to pull an image from a
  // private registry.
  // +optional
  optional string imagepullsecret = 10 [(gogoproto.customname) = "ImagePullSecret", (gogoproto.nullable) = false];
}

// ExecutionStrategy specifies low-level parameters for function execution,
// such as the number of instances.
//
// MinScale affects the cold start behavior for a function. If MinScale is 0 then the
// deployment is created on first invocation of function and is good for requests of
// asynchronous nature. If MinScale is greater than 0 then MinScale number of pods are
// created at the time of creation of function. This ensures faster response during first
// invocation at the cost of consuming resources.
//
// MaxScale is the maximum number of pods that function will scale to based on TargetCPUPercent
// and resources allocated to the function pod.
message ExecutionStrategy {
  // ExecutorType is the executor type of function used. Defaults to "poolmgr".
  //
  // Available value:
  //  - poolmgr
  //  - newdeploy
  //  - container
  // +optional
  optional string ExecutorType = 1 [(gogoproto.casttype) = "ExecutorType", (gogoproto.nullable) = false];

  // This is only for newdeploy to set up minimum replicas of deployment.
  // +optional
  optional int64 MinScale = 2 [(gogoproto.nullable) = false];

  // This is only for newdeploy to set up maximum replicas of deployment.
  // +optional
  optional int64 MaxScale = 3 [(gogoproto.nullable) = false];

  // Deprecated: use hpaMetrics instead.
  // This is only for executor type newdeploy and container to set up target CPU utilization of HPA.
  // Applicable for executor type newdeploy and container.
  // +optional
  optional int64 TargetCPUPercent = 4 [(gogoproto.nullable) = false];

  // This is the timeout setting for executor to wait for pod specialization.
  // +optional
  optional int64 SpecializationTimeout = 5 [(gogoproto.nullable) = false];

  // hpaMetrics is the list of metrics used to determine the desired replica count of the Deployment
  // created for the function.
  // Applicable for executor type newdeploy and container.
  // +optional
  repeated MetricSpec hpaMetrics = 6 [(gogoproto.customname) = "Metrics", (gogoproto.nullable) = false];

  // hpaBehavior is the behavior of HPA when scaling in up/down direction.
  // Applicable for executor type newdeploy and container.
  // +optional
  optional HorizontalPodAutoscalerBehavior hpaBehavior = 7 [(gogoproto.customname) = "Behavior"];
}

// Function is function runs within environment runtime with given package and secrets/configmaps.
// +genclient
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:singular="function",scope="Namespaced",shortName={fn}
message Function {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional FunctionSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];
}

// FunctionList is a list of Functions.
// +kubebuilder:object:root=true
message FunctionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated Function items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// FunctionPackageRef includes the reference to the package also the entrypoint of package.
message FunctionPackageRef {
  // Package reference
  // +optional
  optional PackageRef packageref = 1 [(gogoproto.customname) = "PackageRef", (gogoproto.nullable) = false];

  // FunctionName specifies a specific function within the package. This allows
  // functions to share packages, by having different functions within the same
  // package.
  //
  // Fission itself does not interpret this path. It is passed verbatim to
  // build and runtime environments.
  //
  // This is optional: if unspecified, the environment has a default name.
  optional string functionName = 2 [(gogoproto.customname) = "FunctionName", (gogoproto.nullable) = false];
}

// FunctionReference refers to a function
message FunctionReference {
  // Type indicates whether this function reference is by name or selector. For now,
  // the only supported reference type is by "name".  Future reference types:
  //   * Function by label or annotation
  //   * Branch or tag of a versioned function
  //   * A "rolling upgrade" from one version of a function to another
  // Available value:
  // - name
  // - function-weights
  optional string type = 1 [(gogoproto.casttype) = "FunctionReferenceType", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // Name of the function.
  optional string name = 2 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // Function Reference by weight. this map contains function name as key and its weight
  // as the value. This is for canary upgrade purpose.
  // +nullable
  // +optional
  map<string, int64> functionweights = 3 [(gogoproto.customname) = "FunctionWeights", (gogoproto.nullable) = false];
}

// FunctionSpec describes the contents of the function.
message FunctionSpec {
  // Environment is the build and runtime environment that this function is
  // associated with. An Environment with this name should exist, otherwise the
  // function cannot be invoked.
  optional EnvironmentReference environment = 1 [(gogoproto.customname) = "Environment", (gogoproto.nullable) = false];

  // Reference to a package containing deployment and optionally the source.
  optional FunctionPackageRef package = 2 [(gogoproto.customname) = "Package", (gogoproto.nullable) = false];

  // Reference to a list of secrets.
  // +optional
  // +nullable
  repeated SecretReference secrets = 3 [(gogoproto.customname) = "Secrets", (gogoproto.nullable) = false];

  // Reference to a list of configmaps.
  // +optional
  // +nullable
  repeated ConfigMapReference configmaps = 4 [(gogoproto.customname) = "ConfigMaps", (gogoproto.nullable) = false];

  // cpu and memory resources as per K8S standards
  // This is only for newdeploy to set up resource limitation
  // when creating deployment for a function.
  // +optional
  optional k8s.io.api.core.v1.ResourceRequirements resources = 5 [(gogoproto.customname) = "Resources", (gogoproto.nullable) = false];

  // InvokeStrategy is a set of controls which affect how function executes
  optional InvokeStrategy InvokeStrategy = 6 [(gogoproto.nullable) = false];

  // FunctionTimeout provides a maximum amount of duration within which a request for
  // a particular function execution should be complete.
  // This is optional. If not specified default value will be taken as 60s
  // +optional
  optional int64 functionTimeout = 7 [(gogoproto.customname) = "FunctionTimeout", (gogoproto.nullable) = false];

  // IdleTimeout specifies the length of time that a function is idle before the
  // function pod(s) are eligible for deletion. If no traffic to the function
  // is detected within the idle timeout, the executor will then recycle the
  // function pod(s) to release resources.
  // +optional
  optional int64 idletimeout = 8 [(gogoproto.customname) = "IdleTimeout"];

  // Maximum number of pods to be specialized which will serve requests
  // This is optional. If not specified default value will be taken as 500
  // +optional
  optional int64 concurrency = 9 [(gogoproto.customname) = "Concurrency", (gogoproto.nullable) = false];

  // RequestsPerPod indicates the maximum number of concurrent requests that can be served by a specialized pod
  // This is optional. If not specified default value will be taken as 1
  // +optional
  optional int64 requestsPerPod = 10 [(gogoproto.customname) = "RequestsPerPod", (gogoproto.nullable) = false];

  // OnceOnly specifies if specialized pod will serve exactly one request in its lifetime and would be garbage collected after serving that one request
  // This is optional. If not specified default value will be taken as false
  // +optional
  optional bool onceOnly = 11 [(gogoproto.customname) = "OnceOnly", (gogoproto.nullable) = false];

  // Podspec specifies podspec to use for executor type container based functions
  // Different arguments mentioned for container based function are populated inside a pod.
  // +optional
  optional k8s.io.api.core.v1.PodSpec podspec = 12 [(gogoproto.customname) = "PodSpec"];
}

// HTTPTrigger is the trigger invokes user functions when receiving HTTP requests.
// +genclient
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
message HTTPTrigger {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional HTTPTriggerSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];
}

// HTTPTriggerList is a list of HTTPTriggers
// +kubebuilder:object:root=true
message HTTPTriggerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated HTTPTrigger items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// HTTPTriggerSpec is for router to expose user functions at the given URL path.
message HTTPTriggerSpec {
  // TODO: remove this field since we have IngressConfig already
  // Deprecated: the original idea of this field is not for setting Ingress.
  // Since we have IngressConfig now, remove Host after couple releases.
  // +optional
  optional string host = 1 [(gogoproto.customname) = "Host", (gogoproto.nullable) = false];

  // RelativeURL is the exposed URL for external client to access a function with.
  // +optional
  optional string relativeurl = 2 [(gogoproto.customname) = "RelativeURL", (gogoproto.nullable) = false];

  // Prefix with which functions are exposed.
  // NOTE: Prefix takes precedence over URL/RelativeURL.
  // Note that it does not treat slashes specially ("/foobar/" will be matched by
  // the prefix "/foobar").
  // +optional
  optional string prefix = 3 [(gogoproto.customname) = "Prefix"];

  // When function is exposed with Prefix based path,
  // keepPrefix decides whether to keep or trim prefix in URL while invoking function.
  // +optional
  optional bool keepPrefix = 4 [(gogoproto.customname) = "KeepPrefix", (gogoproto.nullable) = false];

  // Use Methods instead of Method. This field is going to be deprecated in a future release
  // HTTP method to access a function.
  // +optional
  optional string method = 5 [(gogoproto.customname) = "Method", (gogoproto.nullable) = false];

  // HTTP methods to access a function
  // +optional
  repeated string methods = 6 [(gogoproto.customname) = "Methods"];

  // FunctionReference is a reference to the target function.
  optional FunctionReference functionref = 7 [(gogoproto.customname) = "FunctionReference", (gogoproto.nullable) = false];

  // If CreateIngress is true, router will create an ingress definition.
  // +optional
  optional bool createingress = 8 [(gogoproto.customname) = "CreateIngress", (gogoproto.nullable) = false];

  // TODO: make IngressConfig an independent Fission resource
  // IngressConfig for router to set up Ingress.
  // +optional
  optional IngressConfig ingressconfig = 9 [(gogoproto.customname) = "IngressConfig", (gogoproto.nullable) = false];
}

// IngressConfig is for router to set up Ingress.
message IngressConfig {
  // Annotations will be added to metadata when creating Ingress.
  // +optional
  // +nullable
  map<string, string> annotations = 1 [(gogoproto.customname) = "Annotations", (gogoproto.nullable) = false];

  // Path is for path matching. The format of path
  // depends on what ingress controller you used.
  // +optional
  optional string path = 2 [(gogoproto.customname) = "Path", (gogoproto.nullable) = false];

  // Host is for ingress controller to apply rules. If
  // host is empty or "*", the rule applies to all
  // inbound HTTP traffic.
  // +optional
  optional string host = 3 [(gogoproto.customname) = "Host", (gogoproto.nullable) = false];

  // TLS is for user to specify a Secret that contains
  // TLS key and certificate. The domain name in the
  // key and crt must match the value of Host field.
  // +optional
  optional string tls = 4 [(gogoproto.customname) = "TLS", (gogoproto.nullable) = false];
}

// InvokeStrategy is a set of controls over how the function executes.
// It affects the performance and resource usage of the function.
//
// An InvokeStrategy is of one of two types: ExecutionStrategy, which controls low-level
// parameters such as which ExecutorType to use, when to autoscale, minimum and maximum
// number of running instances, etc. A higher-level AbstractInvokeStrategy will also be
// supported; this strategy would specify the target request rate of the function,
// the target latency statistics, and the target cost (in terms of compute resources).
message InvokeStrategy {
  // ExecutionStrategy specifies low-level parameters for function execution,
  // such as the number of instances.
  // +optional
  optional ExecutionStrategy ExecutionStrategy = 1 [(gogoproto.nullable) = false];

  // StrategyType is the strategy type of function.
  // Now it only supports 'execution'.
  // +optional
  optional string StrategyType = 2 [(gogoproto.casttype) = "StrategyType", (gogoproto.nullable) = false];
}

// KubernetesWatchTrigger watches kubernetes resource events and invokes functions.
// +genclient
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
message KubernetesWatchTrigger {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional KubernetesWatchTriggerSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];
}

// KubernetesWatchTriggerList is a list of KubernetesWatchTriggers
// +kubebuilder:object:root=true
message KubernetesWatchTriggerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated KubernetesWatchTrigger items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// KubernetesWatchTriggerSpec defines spec of KuberenetesWatchTrigger
message KubernetesWatchTriggerSpec {
  optional string namespace = 1 [(gogoproto.customname) = "Namespace", (gogoproto.nullable) = false];

  // Type of resource to watch (Pod, Service, etc.)
  optional string type = 2 [(gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // Resource labels
  // +optional
  map<string, string> labelselector = 3 [(gogoproto.customname) = "LabelSelector", (gogoproto.nullable) = false];

  // The reference to a function for kubewatcher to invoke with
  // when receiving events.
  optional FunctionReference functionref = 4 [(gogoproto.customname) = "FunctionReference", (gogoproto.nullable) = false];
}

// MessageQueueTrigger invokes functions when messages arrive to certain topic that trigger subscribes to.
// +genclient
// +kubebuilder:object:root=true
message MessageQueueTrigger {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional MessageQueueTriggerSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];
}

// MessageQueueTriggerList is a list of MessageQueueTriggers.
// +kubebuilder:object:root=true
message MessageQueueTriggerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated MessageQueueTrigger items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// MessageQueueTriggerSpec defines a binding from a topic in a
// message queue to a function.
message MessageQueueTriggerSpec {
  // The reference to a function for message queue trigger to invoke with
  // when receiving messages from subscribed topic.
  // +optional
  optional FunctionReference functionref = 1 [(gogoproto.customname) = "FunctionReference", (gogoproto.nullable) = false];

  // Type of message queue (NATS, Kafka, AzureQueue)
  // +optional
  optional string messageQueueType = 2 [(gogoproto.casttype) = "MessageQueueType", (gogoproto.customname) = "MessageQueueType", (gogoproto.nullable) = false];

  // Subscribed topic
  optional string topic = 3 [(gogoproto.customname) = "Topic", (gogoproto.nullable) = false];

  // Topic for message queue trigger to sent response from function.
  // +optional
  optional string respTopic = 4 [(gogoproto.customname) = "ResponseTopic", (gogoproto.nullable) = false];

  // Topic to collect error response sent from function
  // +optional
  optional string errorTopic = 5 [(gogoproto.customname) = "ErrorTopic", (gogoproto.nullable) = false];

  // Maximum times for message queue trigger to retry
  // +optional
  optional int64 maxRetries = 6 [(gogoproto.customname) = "MaxRetries", (gogoproto.nullable) = false];

  // Content type of payload
  // +optional
  optional string contentType = 7 [(gogoproto.customname) = "ContentType", (gogoproto.nullable) = false];

  // The period to check each trigger source on every ScaledObject, and scale the deployment up or down accordingly
  // +optional
  optional int32 pollingInterval = 8 [(gogoproto.customname) = "PollingInterval"];

  // The period to wait after the last trigger reported active before scaling the deployment back to 0
  // +optional
  optional int32 cooldownPeriod = 9 [(gogoproto.customname) = "CooldownPeriod"];

  // Minimum number of replicas KEDA will scale the deployment down to
  // +optional
  optional int32 minReplicaCount = 10 [(gogoproto.customname) = "MinReplicaCount"];

  // Maximum number of replicas KEDA will scale the deployment up to
  // +optional
  optional int32 maxReplicaCount = 11 [(gogoproto.customname) = "MaxReplicaCount"];

  // ScalerTrigger fields
  // +optional
  map<string, string> metadata = 12 [(gogoproto.customname) = "Metadata", (gogoproto.nullable) = false];

  // Secret name
  // +optional
  optional string secret = 13 [(gogoproto.customname) = "Secret", (gogoproto.nullable) = false];

  // Kind of Message Queue Trigger to be created, by default its fission
  // +optional
  optional string mqtkind = 14 [(gogoproto.customname) = "MqtKind", (gogoproto.nullable) = false];

  // (Optional) Podspec allows modification of deployed runtime pod with Kubernetes PodSpec
  // The merging logic is briefly described below and detailed MergePodSpec function
  // - Volumes mounts and env variables for function and fetcher container are appended
  // - All additional containers and init containers are appended
  // - Volume definitions are appended
  // - Lists such as tolerations, ImagePullSecrets, HostAliases are appended
  // - Structs are merged and variables from pod spec take precedence
  // +optional
  optional k8s.io.api.core.v1.PodSpec podspec = 15 [(gogoproto.customname) = "PodSpec"];
}

// Package Think of these as function-level images.
// +genclient
// +kubebuilder:object:root=true
// +kubebuilder:resource:singular="package",scope="Namespaced",shortName={pkg}
message Package {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional PackageSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];

  // Status indicates the build status of package.
  // +optional
  optional PackageStatus status = 3 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];
}

// PackageList is a list of Packages.
// +kubebuilder:object:root=true
message PackageList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated Package items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// PackageRef is a reference to the package.
message PackageRef {
  // +optional
  optional string namespace = 1 [(gogoproto.customname) = "Namespace", (gogoproto.nullable) = false];

  // +optional
  optional string name = 2 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // Including resource version in the reference forces the function to be updated on
  // package update, making it possible to cache the function based on its metadata.
  optional string resourceversion = 3 [(gogoproto.customname) = "ResourceVersion", (gogoproto.nullable) = false];
}

// PackageSpec includes source/deploy archives and the reference of environment to build the package.
message PackageSpec {
  // Environment is a reference to the environment for building source archive.
  optional EnvironmentReference environment = 1 [(gogoproto.customname) = "Environment", (gogoproto.nullable) = false];

  // Source is the archive contains source code and dependencies file.
  // If the package status is in PENDING state, builder manager will then
  // notify builder to compile source and save the result as deployable archive.
  // +optional
  optional Archive source = 2 [(gogoproto.customname) = "Source", (gogoproto.nullable) = false];

  // Deployment is the deployable archive that environment runtime used to run user function.
  // +optional
  optional Archive deployment = 3 [(gogoproto.customname) = "Deployment", (gogoproto.nullable) = false];

  // BuildCommand is a custom build command that builder used to build the source archive.
  // +optional
  optional string buildcmd = 4 [(gogoproto.customname) = "BuildCommand", (gogoproto.nullable) = false];
}

// PackageStatus contains the build status of a package also the build log for examination.
message PackageStatus {
  // BuildStatus is the package build status.
  // +kubebuilder:default:="pending"
  optional string buildstatus = 1 [(gogoproto.casttype) = "BuildStatus", (gogoproto.customname) = "BuildStatus", (gogoproto.nullable) = false];

  // BuildLog stores build log during the compilation.
  // +optional
  optional string buildlog = 2 [(gogoproto.customname) = "BuildLog", (gogoproto.nullable) = false];

  // LastUpdateTimestamp will store the timestamp the package was last updated
  // metav1.Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.
  // https://github.com/kubernetes/apimachinery/blob/44bd77c24ef93cd3a5eb6fef64e514025d10d44e/pkg/apis/meta/v1/time.go#L26-L35
  // +optional
  // +nullable
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTimestamp = 3 [(gogoproto.customname) = "LastUpdateTimestamp", (gogoproto.nullable) = false];
}

// RouterAuthToken defines the authorization token for accessing router
message RouterAuthToken {
  optional string accesstoken = 1 [(gogoproto.customname) = "AccessToken", (gogoproto.nullable) = false];

  optional string tokentype = 2 [(gogoproto.customname) = "TokenType", (gogoproto.nullable) = false];
}

// Runtime is the setting for environment runtime.
message Runtime {
  // Image for containing the language runtime.
  optional string image = 1 [(gogoproto.customname) = "Image", (gogoproto.nullable) = false];

  // (Optional) Container allows the modification of the deployed runtime
  // container using the Kubernetes Container spec. Fission overrides
  // the following fields:
  // - Name
  // - Image; set to the Runtime.Image
  // - TerminationMessagePath
  // - ImagePullPolicy
  //
  // You can set either PodSpec or Container, but not both.
  // kubebuilder:validation:XPreserveUnknownFields=true
  optional k8s.io.api.core.v1.Container container = 2 [(gogoproto.customname) = "Container"];

  // (Optional) Podspec allows modification of deployed runtime pod with Kubernetes PodSpec
  // The merging logic is briefly described below and detailed MergePodSpec function
  // - Volumes mounts and env variables for function and fetcher container are appended
  // - All additional containers and init containers are appended
  // - Volume definitions are appended
  // - Lists such as tolerations, ImagePullSecrets, HostAliases are appended
  // - Structs are merged and variables from pod spec take precedence
  //
  // You can set either PodSpec or Container, but not both.
  optional k8s.io.api.core.v1.PodSpec podspec = 3 [(gogoproto.customname) = "PodSpec"];
}

// SecretReference is a reference to a kubernetes secret.
message SecretReference {
  optional string namespace = 1 [(gogoproto.customname) = "Namespace", (gogoproto.nullable) = false];

  optional string name = 2 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];
}

// TimeTrigger invokes functions based on given cron schedule.
// +genclient
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
message TimeTrigger {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional TimeTriggerSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];
}

// TimeTriggerList is a list of TimeTriggers.
// +kubebuilder:object:root=true
message TimeTriggerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated TimeTrigger items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// TimeTriggerSpec invokes the specific function at a time or
// times specified by a cron string.
message TimeTriggerSpec {
  // Cron schedule
  optional string cron = 1 [(gogoproto.customname) = "Cron", (gogoproto.nullable) = false];

  // The reference to function
  optional FunctionReference functionref = 2 [(gogoproto.customname) = "FunctionReference", (gogoproto.nullable) = false];
}

